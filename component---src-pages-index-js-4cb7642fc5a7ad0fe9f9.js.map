{"version":3,"sources":["webpack:///./src/components/FrontPageHeader.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/utils.js","webpack:///./src/components/FrontPagePost.js","webpack:///./src/components/FrontPageSection.js","webpack:///./content/assets/fargo1.jpg"],"names":["BgDiv","styled","div","withConfig","displayName","componentId","bgi","InnerBgDiv","headerQuery","Header","react_default","a","createElement","gatsby_browser_entry","query","render","data","_data$site$siteMetada","site","siteMetadata","author","social","_4277405433","getSection","slug","split","BlogIndex","this","props","siteTitle","title","console","log","frontPageCategories","posts","allMarkdownRemark","edges","_R$pipe","R","poetry","performance","otherCategories","objectWithoutPropertiesLoose_default","Fragment","FrontPageHeader","layout","location","seo","keywords","FrontPageSection","cat","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","header","Layout","_this$props","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","style","boxShadow","textDecoration","color","overflow","to","__PATH_PREFIX__","position","marginLeft","marginRight","maxWidth","lineHeight","paddingTop","SEO","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","capFirst","input","toUpperCase","slice","FrontPageLi","li","FrontPagePostLink","Link","FrontPagePostExcerpt","p","FrontPagePost","post","fields","frontmatter","excerpt","FrontPageSectionBase","section","FrontPageSectionHeader","h3","FrontPageSectionList","ul","toLowerCase","map","components_FrontPagePost"],"mappings":"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","file":"component---src-pages-index-js-4cb7642fc5a7ad0fe9f9.js","sourcesContent":["import React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport styled from \"styled-components\";\nimport Image from \"gatsby-image\";\nimport bgi from \"../../content/assets/fargo1.jpg\";\nimport BackgroundImage from \"gatsby-background-image\";\n\nconst BgDiv = styled.div`\n  @import url(\"https://fonts.googleapis.com/css?family=Ultra&display=swap\");\n  background-image: url(${bgi});\n  background-size: cover;\n  /* background-clip: text; */\n  /* -webkit-background-clip: text; */\n  min-width: 100%;\n  /* min-height: 500px; */\n  background-position: bottom center;\n  color: transparent;\n  /* color: white; */\n`;\nconst InnerBgDiv = styled.div`\n  /* background-image: url(${bgi}); */\n  /* background-size: cover; */\n  min-width: 100%;\n  /* background-position: bottom center; */\n  margin: 0;\n  opacity: 0.5;\n  /* color: transparent; */\n  color: white;\n  /* color: #111; */\n  h1 {\n    font-family: \"Ultra\", serif;\n    font-size: 20vw;\n    text-align: right;\n    font-weight: 900;\n    margin: 0;\n    background: rgba(0,0,0,.5);\n    display: inline-block\n  }\n`;\n\nfunction Header() {\n  return (\n    <StaticQuery\n      query={headerQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata;\n        return (\n          <div>\n            <BgDiv\n            // fixed={data.headerPic.childImageSharp.fluid}\n            // alt={author}\n            // imgStyle={\n            //   {\n            //     // borderRadius: `50%`\n            //   }\n            // }\n            >\n              <InnerBgDiv>\n                <h1>{author}</h1>\n              </InnerBgDiv>\n            </BgDiv>\n            {/* <BioText>Writer and performance artist</BioText> */}\n            {/* <p>\n              <strong>{author}</strong>\n              {/* {` `}\n              <a href={`https://twitter.com/${social.twitter}`}>\n                You should follow him on Twitter\n              </a> */}\n          </div>\n        );\n      }}\n    />\n  );\n}\n\nconst headerQuery = graphql`\n  query HeaderQuery {\n    headerPic: file(absolutePath: { regex: \"/fargo1.jpg/\" }) {\n      childImageSharp {\n        fluid(maxWidth: 2560) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nexport default Header;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport * as R from \"ramda\";\nimport styled from \"styled-components\";\n\nimport FrontPageHeader from \"../components/FrontPageHeader\";\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport FrontPageSection from \"../components/FrontPageSection\";\n\nconst getSection = slug => slug.split(\"/\")[1];\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    console.log(data.site.siteMetadata.frontPageCategories);\n    const posts = data.allMarkdownRemark.edges;\n    console.log(posts);\n    const { poetry, performance, ...otherCategories } = R.pipe(\n      R.map(R.prop(\"node\")),\n      R.groupBy(\n        R.pipe(\n          R.path([\"fields\", \"slug\"]),\n          getSection\n        )\n      )\n    )(posts);\n\n    console.log(otherCategories);\n\n    return (\n      <>\n        <FrontPageHeader />\n        <Layout location={this.props.location} title={siteTitle}>\n          <SEO\n            title=\"Home\"\n            keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n          />\n          <FrontPageSection posts={poetry} title=\"Poetry\" />\n          <FrontPageSection posts={performance} title=\"Performance\" />\n          {R.map(\n            cat => (\n              <FrontPageSection posts={otherCategories[cat]} title={cat} />\n            ),\n            R.keys(otherCategories)\n          )}\n        </Layout>\n      </>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  margin-left: 120px;\n  display: flex;\n  flex-direction: column;\n  /* overflow: auto; */\n  /* display: flex; */\n    /* padding: 0; */\n  h1 {\n    font-size: 1em;\n    font-weight: normal;\n    margin: 16px 0;\n  }\n  h2 {\n    font-size: 1em;\n    font-weight: normal;\n    margin: 16px 0;\n  }\n`;\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props;\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header;\n    console.log('location', location);\n    header = (\n      <>\n        <h1>\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n              overflow: 'auto'\n            }}\n            to={rootPath}\n          >\n            {location.pathname !== rootPath &&\n              <span\n                style={{\n                  position: 'absolute',\n                  marginLeft: '-15px',\n                  color: 'grey'\n                }}\n              >&#9664;</span>}{title}\n          </Link>\n        </h1>\n        <h2>Writer and performance artist</h2>\n      </>\n    );\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: \"800px\",\n          lineHeight: \"1.6\",\n          paddingTop: \"2em\"\n          // padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <Header>{header}</Header>\n        <main>{children}</main>\n        {/* <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer> */}\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","export const capFirst = (input) => [input[0].toUpperCase(), input.slice(1)].join(''); ","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from 'styled-components';\n\nconst FrontPageLi = styled.li`\n  list-style: none;\n`\n\nconst FrontPagePostLink = styled(Link)`\n  font-style: italic;\n`\n\nconst FrontPagePostExcerpt = styled.p`\n\n`\n\nconst FrontPagePost = ({ post }) => (\n  <FrontPageLi>\n    <FrontPagePostLink to={post.fields.slug}>{post.frontmatter.title}</FrontPagePostLink>\n    <FrontPagePostExcerpt>{post.excerpt}</FrontPagePostExcerpt>\n  </FrontPageLi>\n);\n\nexport default FrontPagePost;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport FrontPagePost from \"./FrontPagePost\";\nimport styled from \"styled-components\";\nimport { capFirst } from '../utils';\n\nconst FrontPageSectionBase = styled.section`\n  display: flex;\n`;\n\nconst FrontPageSectionHeader = styled.h3`\n  flex-shrink: 0;\n  width: 120px;\n  text-align: right;\n  padding-right: 0.5em;\n  /* font-weight: normal; */\n  font-size: 1em;\n  /* font-style: italic; */\n  a {\n    color: black;\n    /* font-style: italic; */\n  }\n`;\n\nconst FrontPageSectionList = styled.ul`\n  padding-left: 0;\n`;\n\nconst FrontPageSection = ({ posts, title }) => (\n  <FrontPageSectionBase>\n    <FrontPageSectionHeader>\n      <Link to={title.toLowerCase()}>{capFirst(title)}</Link>\n    </FrontPageSectionHeader>\n    <FrontPageSectionList>\n      {posts.map(post => {\n        return (\n          // <div key={`${post.frontmatter.title}:${post.frontmatter.date}`}>\n          //   <h4>{post.frontmatter.title}</h4>\n          //   <a href={post.fields.slug}>{post.fields.slug}</a>\n          //   {post.frontmatter.date}\n          // </div>\n          <FrontPagePost post={post} />\n        );\n      })}\n    </FrontPageSectionList>\n  </FrontPageSectionBase>\n);\n\nexport default FrontPageSection;\n","module.exports = __webpack_public_path__ + \"static/fargo1-03bd219cd2ae85a60b4bc81b54725ee5.jpg\";"],"sourceRoot":""}