{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/bio.js","webpack:///./src/components/FrontPagePost.js","webpack:///./src/components/FrontPageSection.js"],"names":["getSection","slug","split","BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","console","log","frontPageCategories","posts","allMarkdownRemark","edges","_R$pipe","R","poetry","performance","otherCategories","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_13__","location","_components_seo__WEBPACK_IMPORTED_MODULE_14__","keywords","_components_FrontPageSection__WEBPACK_IMPORTED_MODULE_15__","cat","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","useStaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","useContext","context","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","styled","header","withConfig","displayName","componentId","Layout","_this$props","react__WEBPACK_IMPORTED_MODULE_1___default","Fragment","gatsby__WEBPACK_IMPORTED_MODULE_2__","style","boxShadow","textDecoration","color","to","marginLeft","marginRight","maxWidth","lineHeight","paddingTop","Date","getFullYear","href","SEO","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","bioQuery","Bio","_data$site$siteMetada","social","_public_static_d_4007731267_json__WEBPACK_IMPORTED_MODULE_0__","FrontPageLi","li","FrontPagePostLink","Link","FrontPagePostExcerpt","p","FrontPagePost","post","react_default","fields","frontmatter","excerpt","FrontPageSectionBase","section","FrontPageSectionHeader","h3","FrontPageSectionList","ul","FrontPageSection","gatsby_browser_entry","map","components_FrontPagePost"],"mappings":"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","file":"component---src-pages-index-js-6f135671cb1bdae9128b.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport * as R from \"ramda\";\nimport styled from \"styled-components\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport FrontPageSection from \"../components/FrontPageSection\";\n\nconst getSection = slug => slug.split(\"/\")[1];\n\n\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    console.log(data.site.siteMetadata.frontPageCategories);\n    const posts = data.allMarkdownRemark.edges;\n    console.log(posts);\n    const { poetry, performance, ...otherCategories } = R.pipe(\n      R.map(R.prop(\"node\")),\n      R.groupBy(\n        R.pipe(\n          R.path([\"fields\", \"slug\"]),\n          getSection\n        )\n      )\n    )(posts);\n\n    console.log(otherCategories);\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"Home\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        {/* <Bio /> */}\n        <FrontPageSection posts={poetry} title=\"poetry\" />\n        <FrontPageSection posts={performance} title=\"performance\" />\n        {R.map(\n          cat => (\n            <FrontPageSection posts={otherCategories[cat]} title={cat} />\n          ),\n          R.keys(otherCategories)\n        )}\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  margin-left: 120px;\n  display: flex;\n  flex-direction: column;\n  /* overflow: auto; */\n  /* display: flex; */\n    /* padding: 0; */\n  h1 {\n    font-size: 1em;\n    font-weight: normal;\n    margin: 16px 0;\n  }\n  h2 {\n    font-size: 1em;\n    font-weight: normal;\n    margin: 16px 0;\n  }\n`;\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props;\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header;\n\n    header = (\n      <>\n      <h1>\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`\n          }}\n          to={`/`}\n        >\n          {title}\n        </Link>\n      </h1>\n      <h2>Writer and performance artist</h2>\n      </>\n    );\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: \"800px\",\n          lineHeight: \"1.6\",\n          paddingTop: \"2em\"\n          // padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <Header>{header}</Header>\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport styled from 'styled-components';\nimport Image from \"gatsby-image\";\n\n\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata;\n        return (\n          <div>\n            Fargo is a writer and performance artist.\n            {/* <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                // marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`\n              }}\n              imgStyle={{\n                borderRadius: `50%`\n              }}\n            /> */}\n            {/* <BioText>Writer and performance artist</BioText> */}\n            {/* <p>\n              <strong>{author}</strong>\n              {/* {` `}\n              <a href={`https://twitter.com/${social.twitter}`}>\n                You should follow him on Twitter\n              </a> */}\n          </div>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from 'styled-components';\n\nconst FrontPageLi = styled.li`\n  list-style: none;\n`\n\nconst FrontPagePostLink = styled(Link)`\n  text-decoration: italic;\n`\n\nconst FrontPagePostExcerpt = styled.p`\n\n`\n\nconst FrontPagePost = ({ post }) => (\n  <FrontPageLi>\n    <FrontPagePostLink to={post.fields.slug}>{post.frontmatter.title}</FrontPagePostLink>\n    <FrontPagePostExcerpt>{post.excerpt}</FrontPagePostExcerpt>\n  </FrontPageLi>\n);\n\nexport default FrontPagePost;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport FrontPagePost from \"./FrontPagePost\";\nimport styled from 'styled-components';\n\nconst FrontPageSectionBase = styled.section`\n  display: flex;\n`\n\nconst FrontPageSectionHeader = styled.h3`\n  flex-shrink: 0;\n  width: 120px;\n  text-align: right;\n  padding-right: .5em;\n  /* font-weight: normal; */\n  font-size: 1em;\n  /* font-style: italic; */\n  a {\n    color: black;\n  }\n`\n\nconst FrontPageSectionList = styled.ul`\n  padding-left: 0;\n`\n\nconst FrontPageSection = ({ posts, title }) => (\n  <FrontPageSectionBase>\n    <FrontPageSectionHeader><Link to={title}>{title}</Link></FrontPageSectionHeader>\n    <FrontPageSectionList>\n      {posts.map(post => {\n        return (\n          // <div key={`${post.frontmatter.title}:${post.frontmatter.date}`}>\n          //   <h4>{post.frontmatter.title}</h4>\n          //   <a href={post.fields.slug}>{post.fields.slug}</a>\n          //   {post.frontmatter.date}\n          // </div>\n          <FrontPagePost post={post} />\n        );\n      })}\n    </FrontPageSectionList>\n  </FrontPageSectionBase>\n);\n\nexport default FrontPageSection;\n"],"sourceRoot":""}