{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/bio.js","webpack:///./src/components/FrontPagePost.js","webpack:///./src/components/FrontPageSection.js"],"names":["getSection","slug","split","BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","console","log","frontPageCategories","posts","allMarkdownRemark","edges","_R$pipe","R","poetry","performance","otherCategories","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_14__","location","_components_seo__WEBPACK_IMPORTED_MODULE_15__","keywords","_components_bio__WEBPACK_IMPORTED_MODULE_13__","_components_FrontPageSection__WEBPACK_IMPORTED_MODULE_16__","cat","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","useStaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","useContext","context","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","header","_this$props","__PATH_PREFIX__","react__WEBPACK_IMPORTED_MODULE_1___default","style","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","textDecoration","color","to","fontFamily","marginLeft","marginRight","Date","getFullYear","href","SEO","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","bioQuery","Bio","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","_data$site$siteMetada","social","display","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","avatar","childImageSharp","alt","marginBottom","minWidth","borderRadius","imgStyle","twitter","_public_static_d_4007731267_json__WEBPACK_IMPORTED_MODULE_1__","FrontPagePost","post","react_default","fields","frontmatter","excerpt","FrontPageSection","map","components_FrontPagePost"],"mappings":"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","file":"component---src-pages-index-js-b5812739af7c44b87a5e.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport * as R from \"ramda\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n// import { rhythm } from \"../utils/typography\";\nimport FrontPageSection from \"../components/FrontPageSection\";\n\nconst getSection = slug => slug.split(\"/\")[1];\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    console.log(data.site.siteMetadata.frontPageCategories);\n    const posts = data.allMarkdownRemark.edges;\n    console.log(posts);\n    const { poetry, performance, ...otherCategories } = R.pipe(\n      R.map(R.prop(\"node\")),\n      R.groupBy(\n        R.pipe(\n          R.path([\"fields\", \"slug\"]),\n          getSection\n        )\n      )\n    )(posts);\n\n    console.log(otherCategories);\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        <Bio />\n        <FrontPageSection posts={poetry} title=\"poetry\" />\n        <FrontPageSection posts={performance} title=\"performance\" />\n        {R.map(\n          cat => (\n            <FrontPageSection posts={otherCategories[cat]} title={cat} />\n          ),\n          R.keys(otherCategories)\n        )}\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\n// import { rhythm, scale } from \"../utils/typography\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            // ...scale(1.5),\n            // marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          // maxWidth: rhythm(24),\n          // padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\n// import { rhythm } from \"../utils/typography\"\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`,\n              // marginBottom: rhythm(2.5),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                // marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <p>\n              Written by <strong>{author}</strong> who lives and works in San\n              Francisco building useful things.\n              {` `}\n              <a href={`https://twitter.com/${social.twitter}`}>\n                You should follow him on Twitter\n              </a>\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n","import React from \"react\";\n\nconst FrontPagePost = ({ post }) => (\n  <li>\n    <a href={post.fields.slug}>{post.frontmatter.title}</a>\n    <p>{post.excerpt}</p>\n  </li>\n);\n\nexport default FrontPagePost;\n","import React from \"react\";\nimport FrontPagePost from \"./FrontPagePost\";\n\nconst FrontPageSection = ({ posts, title }) => (\n  <div>\n    <h3>{title}</h3>\n    {posts.map(post => {\n      return (\n        // <div key={`${post.frontmatter.title}:${post.frontmatter.date}`}>\n        //   <h4>{post.frontmatter.title}</h4>\n        //   <a href={post.fields.slug}>{post.fields.slug}</a>\n        //   {post.frontmatter.date}\n        // </div>\n        <FrontPagePost post={post} />\n      );\n    })}\n  </div>\n);\n\nexport default FrontPageSection;\n"],"sourceRoot":""}